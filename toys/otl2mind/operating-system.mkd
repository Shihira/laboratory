- 作业系统
    - 概况
        - 分类
            - 批处理系统
            - 分时系统：多路/及时/独立/交互
            - 实时系统：+可靠
        - 特性
            - 并发
            - 共享
                - 互斥共享
                - 同时共享
            - 虚拟
                - 时分复用
                - 空分复用
            - 异步
        - 功能
            - 处理机（进程）
                - 进程控制：创建移除
                - 进程同步：互斥（锁）/同步（信号量）
                - 进程通信：管道/消息队列
                - 调度：进程调度
            - 存储器
                - 内存分配
                - 内存保护
                - 地址映射
                - 内存扩充：虚拟内存
            - 设备
                - 缓冲管理
                - 设备分配
                - 设备处理
            - 文件
                - 存储空间
                - 目录管理：文件名/属性
                - 读写/保护：权限/并发互斥
            - 其它
                - 网络
                - 多媒体
                - 安全
        - 结构
            - 模块化结构：开发难度大
            - 分层式结构：“虚拟机”
            - 微内核结构
                - 特点
                    - 内核足够小
                    - C/S模式
                    - 机制策略分离
                    - OOP抽象
    - 处理机管理
        - 进程/行程(Processes)
            - 性质
                - 动态性：程序的一次执行/有声明周期
                - 并发性：在一段时间内同时运行
                - 异步性：多进程以不可预知的进展运行
                - 独立特征：独立的资源/处理机调度单位
                - 结构特征：含有各种段
            - 状态
                - 创建（动作）：初始化资源
                    - WHEN
                        - 系统初始化（init）
                        - 由旧进程产生新进程
                    - THEN
                        - 新建控制块
                        - 分配内存/文件/设备/CPU
                        - 填充控制块
                        - 加入就绪队列
                - 结束（动作）：回收资源
                    - WHEN
                        - 自愿/正常
                        - 自愿/异常
                        - 被动/错误
                        - 被动/被杀
                    - THEN
                        - 取出控制块
                        - 终止运行中的进程
                        - 终止子进程（递归）
                        - 释放该进程独享的资源
                        - 从队列移除
                - 运行：正在占用处理机
                    - 用户态运行
                    - 内核态运行
                - 就绪：等待CPU资源
                    - WHEN
                        - 信号到达
                    - THEN
                        - 从阻塞队列移到就绪队列
                - 阻塞：等待外部资源
                    - WHEN
                        - 等待资源（如互斥量）
                        - 等待读写（如I/O）
                        - 等待数据（如信号量）
                        - 等待人物（如进程池）
                    - THEN
                        - 停止执行
                        - PCB插入阻塞队列
                - 挂起就绪
                - 挂起阻塞
            - 控制块
                - 表项字段
                    - 进程管理
                        - REG/PC/PSW/BP/SP
                        - STATE
                        - PRIORITY
                        - SIGNAL
                        - PID/PPID/PGID/SID
                        - Timeout
                    - 存储管理
                        - .text
                        - .data
                        - .stack
                    - 文件管理
                        - Home Directory
                        - Working Directory
                        - File Descriptors
                        - UID/GID
                - 存储方式/组织方式
                    - 线性方式
                    - 链接方式：多队列
                    - 索引方式：多表
            - 通信
                - shared memory
                - pipe
                    - 命名管道
                    - 匿名管道
                - message queue
                    - 直接通信
                    - 信箱通信
                - client/server
                    - 基于文件
                    - 基于网络
        - 线程/执行绪(Threads)
            - 概念
                - 性质
                    - 与进程相关
                        > 从进程中拆分出了“调度”

                        - 相对独立的可执行单位
                        - 一对多的关系
                        - 线程不能挂起（进程才可以）
                        - 不拥有资源（文件/设备/内存空间）
                    - 与系统相关
                        - 基本调度单位
                        - 更高的并发性
                        - 同步与通讯（更简便的通讯）
                        - 线程的状态
                    - 新线程由旧线程产生
            - 控制块
            - 用户级线程
            - 内核级线程
        - 同步(Synchronization)
            - 原则
                - 空闲让进
                - 忙则等待
                - 让权等待
                - 有限等待
            - 解决
                - 原始
                    > 除了关中断以外原理都是锁总线

                    - 关中断
                    - TSL原子操作
                    - SWAP原子操作
                - 信号量：P/V
                    - 整形信号量：忙等待/不让权
                    - 记录型信号量：通过原语调用/让权;记录阻塞进程队列
                    - 与型信号量：+多个信号量
                    - 信号量集：+申请大于1
                        > Linux的`sem***`系列接口就是信号量集
                        > 一般信号量集的还有“申请下限”和“总共需要”

                    - 互斥信号量：二值/无需计数
                - 管程
                    > “并发安全的数据结构”

                    - 互斥锁：二值信号量
                    - 条件变量：必须配合互斥锁使用
            - 引发问题(Issues)
                - 死锁问题
                    - 条件
                        - 互斥条件(Mutual Exclusion)
                        - 请求和保持条件(Hold and Wait)
                        - 不可抢占条件(No Preemption)
                        - 环路等待条件(Circular Wait)
                    - 处理：破坏条件
                        - 预防死锁：限制
                        - 避免死锁：绕开
                            - 安全状态
                            - 银行家算法
                        - 检测死锁
                            - 资源分配图
                            - 死锁定理
                        - 接触死锁
                            - 杀进程(有序地)
                - 优先级倒置问题
                    > 高级阻塞/低级被抢占/中级运行

                    - 优先级天花板
                    - 动态优先级继承
                - 饥饿问题
                    > 可能出现一个顺序使得
                    > 某些进程永远无法运行

                - 忙等问题
            - 经典问题(Problems)
                > 基本涵盖所有同步问题
                > 测试新的同步策略

                - 生产者消费者问题
                - 哲学家进餐问题
                - 多读一写互斥问题
        - 调度(Scheduling)
            - 概念
                - 何时调度
                    - 抢占
                        - 进程结束
                        - 进入阻塞态
                        - 时间片结束
                        - 高优先级加入
                    - 非抢占
                        - 进程结束
                        - 进入阻塞态
                - 就绪队列：单队列/多队列
            - 高级调度/作业调度
                - 概念
                    - 作业
                        - 后备状态
                        - 运行状态
                        - 完成状态
                    - 作业步
                    - 控制块(JCB)
                - 算法
                    - FCFS：原始
                    - SJF：平均等待最少/长作业饥饿
                    - PSA：照顾紧急作业/低优先级饥饿
                    - HRRN：短作业快速执行/长作业终将执行
            - 中级调度
                > 挂起/对换

            - 低级调度/进程调度
                - 概念
                    - 抢占/非抢占
                - 算法
                    - Round Robin：抢占
                    - 优先级调度：静态/动态
                    - 多队列调度：适合多处理机/不同队列不同算法
                    - 多级队列反馈调度：未能运行完的掉到低级
                    - 公平调度：均匀执行时间/均匀用户时间
            - 实时调度
                - 条件
                    - 可调度
                    - 参数：发生时间/截止时间/优先级(处理时间/资源)
                    - 抢占式：硬实时
                    - 快速切换
                - 算法
                    - EDF：早结束早调度
                    - LLF：越紧迫越早调度
    - 内存管理
        - 装入/加载(Load)
            - 绝对装入方式
            - 可重定位装入方式
                > 系统在执行程序之前
                > 通过符号字典修改指令

        - 链接
            - 静态链接：a/lib
            - 加载时动态链接：so/dll
            - 运行时动态链接：dlopen()/LoadLibrary()
        - 分配
            - 连续分配
                > 一个进程的所有数据代码
                > 都存放在一个分区中

                - 单分区
                - 多分区
                    - 固定分区
                    - 动态分区
                        - 分配算法
                            - FF
                            - NF
                            - BF
                            - WF
                            - Quick-Fit
                            - Buddy-System
                                > 按2^n分割排到不同链表

                            - Hash
                        - 紧凑/动态重定位
                            > 需重定位寄存器
                            > 调度时需保护

            - 分页式：CR3
                - 地址变换机构
                    > 物理页号 = *(页表首址 + 页表偏移)
                    > 物理地址 = 物理页号 * 页面大小 + 页内偏移

                - 多级页表
                - 反置页表
            - 分段式
                - 目的
                    - 用户编程
                    - 信息共享/保护
                    - 动态增长
                    - 动态链接
                - 地址变换机构
                    > 段结构 = *(段表首址 + 段表偏移)
                    > assert 段内偏移 < 段结构.size
                    > 物理地址 = 段结构.base + 段内偏移

            - 段页式：GDTR/LDTR
        - 对换(原始)
            - 整进程对换
                - 磁盘对换区管理：分配/回收
                - (参考中级调度)
        - 虚拟内存
            - 特征： 多次性/对换性/虚拟性
            - 理论前提：局部性原理
            - 技术实现
                - 请求分页
                    - 硬件前提
                        - 请求页表机制：页表项内容增添
                        - 缺页中断机构
                        - 地址变换机构
                    - 内存策略
                        - 进程内存固定还是可变？
                        - 替换全局还是局部？
                        - 置换算法(Cache Replacement Policies)
                            - Belady
                            - FIFO
                            - LRU
                            - LFU
                            - NRU
                            - MQ
                        - 工作集：多道程序抖动(Thrashing)问题
                            > 阶段：一段时间内
                            > 固定窗口大小

                    - 磁盘策略
                        - 预调页/请求(才)调(一)页
                        - 对换区/文件区
                        - 修改与写回(Write Back)
                        - 页面缓存：多个页面一次写入
                - 请求分段
                    - 硬件前提
                        - 请求段表机制：段表项内容增添
                        - 缺页中断机构
                        - 地址变换机构
                    - 共享/保护
                        - 引用计数
                        - 存取控制
                        - 分别段号
                        - 越界检查
                        - 环保护：Ring0 ~ Ring3
    - I/O
        - 功能
            - 隐藏硬件细节
            - 设备无关性：抽象接口
            - 提高利用率！
            - I/O控制
            - 设备共享
            - 错误处理
        - 层次模型
            - 用户软件层
                - 系统调用/陷入
                - SPOOLing系统
                    > 「假脱机」
                    > 脱机就是将所有要输出的东西
                    > 先输出到「磁盘」然后再由人带去「外围设备」
                    > 是一种非常原始的I/O

                    - 井 -> 磁盘
                    - (守护)进程 -> 外围控制器
            - 设备独立层
                - 设备名：物理/逻辑
                - 系统设备表
                - 控制表(DCT/COCT/CHCT)
                - 逻辑设备表(LUT)
            - 设备驱动层
                - I/O控制方式
                    - 轮询方式
                    - 中断驱动方式
                    - 直接访存方式
                        > 寄存器：CR/MAR/DR/DC
                        > CR DR, [MAR]; DEC DC; LOOP

                    - 通道方式
            - 中断处理层
                - 外中断/内陷入
                - 中断向量表
                - 中断优先级
                - 中断嵌套
            - 硬件层
                - 设备：DCB
                    > 通过数据/状态/控制线

                - 设备控制器
                    - 命令接收
                    - 数据交换/寻址
                    - 报告状态
                    - 数据缓冲
                    - 查错纠错
                - I/O通道
        - 缓冲技术
            - 目的：解决速度不匹配
            - 双缓冲/缓冲对换
            - 缓冲环
            - 缓冲池
        - 磁盘
            - 磁盘格式/结构
            - 磁盘调度
                - FCFS
                - SSTF：饥饿！
                - SCAN/CSCAN：Armstickness!
                - FSCAN
    - 文件系统
        - 文件：最大数据单位
            - 逻辑结构
                - 记录：有意义的信息集合(struct)
                    - 数据项：最低级数据组织(int/char/float)
                    - 「关键字」
            - 有结构文件
                - 顺序文件
                    - 串结构
                    - 顺序结构：按关键字排序
                    - 记录寻址
                - 索引文件
                    > 改进顺序文件
                    > 变长记录检索

                    - 关键字索引
                    - 多个索引表
                - 索引顺序文件
                    > 对组「长」索引

                    - 一级索引
                    - 多级索引表
                - 直接文件
                - 散列文件
            - 无结构文件[DOS/UNIX]
        - 层次结构
            - 文件系统对象
                - 文件
                - 目录
                - 存储空间：区块/簇
            - 对象操作管理软件
                - 功能
                    - 存储空间管理
                        - 物理结构/组织方式
                            - 连续方式
                                - UDF
                            - 链接方式
                                - 隐式链接
                                - 显式链接
                                    - FAT??
                                        > 其中??是两个数字
                                        > 分别代表FAT表项的位长
                                        > 将每个区块用一个表项表示
                                        > 放在分区头
                                        > 两个分配表连续存放

                                    - NTFS
                                        - 64位磁盘地址
                                        - 长文件名
                                        - 数据一致性
                                        - MFT
                                            > 小文件存于MFT
                                            > 大文件链接到外簇

                                        - 定位
                                            - Logical Cluster Number
                                                > 相对卷，单位为簇

                                            - Virtual Cluster Number
                                                > 相对文件，单位为簇

                            - 索引组织方式
                                - 单索引
                                - 多索引
                                - 增量索引(UNIX System V)
                                    > 依照文件大小
                                    > 给予不同层次的索引

                        - 空闲空间管理
                            - 空闲盘块表
                                - 位示图
                            - 空闲盘块链
                            - 空闲盘区链
                            - 成组链接法(UNIX)
                                > 每N个成一组(暂且叫每组尾叫组长吧w)
                                > 用空闲块本身来记录
                                > 每组的组长记录本组的空闲块
                                > 同时指向下一个组的组长
                                > 第一组，存在超级块或者内存
                                > 内存里的用完了再从硬盘里调
                                > 虽然有所谓「第一组」但是并没有代表物理的先后顺序

                    - 文件目录管理
                        - 目的
                            - 「按名存取」
                            - 提高目录检索速度
                            - 文件共享
                            - 允许文件重名
                        - 结构
                            - FCB/I-Node
                                > I-Node比FCB少了文件名

                                - 文件类型：-/d/l/c/b
                                - 存储权限：rwx/owner
                                - 存取时间
                                - 物理地址
                                - 文件长度
                                - Link计数
                                - 打开计数(RAM)
                                - 逻辑/物理结构
                            - 文件目录
                                - 固定层级
                                - 树形目录
                            - 检索
                                - 线性检索法
                                - Hash法
                                    > 不适合通配符
                                    > 需解决冲突

                    - 地址转换机制
                    - 文件读写管理
                    - 文件共享保护
                        - 共享
                            - DAG/I-Node硬链接
                            - SymLink符号链接
                        - 保护
                            - Domain
                                > 在RBAC中Domain = Role
                                > 在DAC中Domain = User/User Group

                            - 访问矩阵
                                - 修改权
                                    - 拷贝权
                                    - 所有权
                                    - 控制权
                                - Access Control List
                                - Access Capabilities List
            - 用户编程接口
                - Create
                - Unlink
                    > I-Node链接计数减一

                - Open
                - Read
                - Write
                - Seek
                - Close
                    > I-Node(RAM)打开计数减一

        - 磁盘I/O优化
            - 速度
                - 提前读(附近区块)
                - 延迟写
                - 优化物理块分布：碎片整理
                - 虚拟盘/RAMDisk
            - 容错
                - SFT-I
                    - 双分目录
                    - 双分FAT
                    - 热修复重定向
                    - 写后读校验
                - SFT-II
                    - 磁盘镜像：+1 磁盘驱动器
                    - 磁盘双工：+1 磁盘控制器
                - 双机热备
                - 双机互备
            - RAID(Redundant Array of Inexpensive Disk)

